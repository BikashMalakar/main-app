import { QuickSightClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../QuickSightClient";
import { CancelIngestionRequest, CancelIngestionResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type CancelIngestionCommandInput = CancelIngestionRequest;
export declare type CancelIngestionCommandOutput = CancelIngestionResponse & __MetadataBearer;
/**
 * <p>Cancels an ongoing ingestion of data into SPICE.</p>
 */
export declare class CancelIngestionCommand extends $Command<CancelIngestionCommandInput, CancelIngestionCommandOutput, QuickSightClientResolvedConfig> {
    readonly input: CancelIngestionCommandInput;
    constructor(input: CancelIngestionCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: QuickSightClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CancelIngestionCommandInput, CancelIngestionCommandOutput>;
    private serialize;
    private deserialize;
}
