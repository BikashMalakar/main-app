import { QuickSightClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../QuickSightClient";
import { CreateThemeRequest, CreateThemeResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type CreateThemeCommandInput = CreateThemeRequest;
export declare type CreateThemeCommandOutput = CreateThemeResponse & __MetadataBearer;
/**
 * <p>Creates a theme.</p>
 * 		       <p>A <i>theme</i> is set of configuration options for color and layout.
 * 			Themes apply to analyses and dashboards. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/themes-in-quicksight.html">Using
 * 			Themes in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>
 */
export declare class CreateThemeCommand extends $Command<CreateThemeCommandInput, CreateThemeCommandOutput, QuickSightClientResolvedConfig> {
    readonly input: CreateThemeCommandInput;
    constructor(input: CreateThemeCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: QuickSightClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateThemeCommandInput, CreateThemeCommandOutput>;
    private serialize;
    private deserialize;
}
