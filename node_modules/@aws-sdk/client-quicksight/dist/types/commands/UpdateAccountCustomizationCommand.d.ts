import { QuickSightClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../QuickSightClient";
import { UpdateAccountCustomizationRequest, UpdateAccountCustomizationResponse } from "../models/models_1";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type UpdateAccountCustomizationCommandInput = UpdateAccountCustomizationRequest;
export declare type UpdateAccountCustomizationCommandOutput = UpdateAccountCustomizationResponse & __MetadataBearer;
/**
 * <p>Updates Amazon QuickSight customizations the current AWS Region. Currently, the only
 *             customization you can use is a theme.</p>
 *         <p>You can use customizations for your AWS account or, if you specify a namespace, for a
 *             QuickSight namespace instead. Customizations that apply to a namespace override
 *             customizations that apply to an AWS account. To find out which customizations apply, use
 *             the <code>DescribeAccountCustomization</code> API operation. </p>
 */
export declare class UpdateAccountCustomizationCommand extends $Command<UpdateAccountCustomizationCommandInput, UpdateAccountCustomizationCommandOutput, QuickSightClientResolvedConfig> {
    readonly input: UpdateAccountCustomizationCommandInput;
    constructor(input: UpdateAccountCustomizationCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: QuickSightClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateAccountCustomizationCommandInput, UpdateAccountCustomizationCommandOutput>;
    private serialize;
    private deserialize;
}
