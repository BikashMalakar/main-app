import { QuickSightClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../QuickSightClient";
import { CreateIAMPolicyAssignmentRequest, CreateIAMPolicyAssignmentResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type CreateIAMPolicyAssignmentCommandInput = CreateIAMPolicyAssignmentRequest;
export declare type CreateIAMPolicyAssignmentCommandOutput = CreateIAMPolicyAssignmentResponse & __MetadataBearer;
/**
 * <p>Creates an assignment with one specified IAM policy, identified by its Amazon Resource Name
 * 			(ARN). This policy assignment is attached to the specified groups or users of Amazon QuickSight.
 * 			Assignment names are unique per AWS account. To avoid overwriting rules in other namespaces,
 * 			use assignment names that are unique.</p>
 */
export declare class CreateIAMPolicyAssignmentCommand extends $Command<CreateIAMPolicyAssignmentCommandInput, CreateIAMPolicyAssignmentCommandOutput, QuickSightClientResolvedConfig> {
    readonly input: CreateIAMPolicyAssignmentCommandInput;
    constructor(input: CreateIAMPolicyAssignmentCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: QuickSightClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateIAMPolicyAssignmentCommandInput, CreateIAMPolicyAssignmentCommandOutput>;
    private serialize;
    private deserialize;
}
