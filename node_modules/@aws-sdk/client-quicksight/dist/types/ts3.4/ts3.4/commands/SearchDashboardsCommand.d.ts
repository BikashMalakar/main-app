import { QuickSightClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../QuickSightClient";
import { SearchDashboardsRequest, SearchDashboardsResponse } from "../models/models_1";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type SearchDashboardsCommandInput = SearchDashboardsRequest;
export declare type SearchDashboardsCommandOutput = SearchDashboardsResponse & __MetadataBearer;
/**
 * <p>Searches for dashboards that belong to a user. </p>
 */
export declare class SearchDashboardsCommand extends $Command<SearchDashboardsCommandInput, SearchDashboardsCommandOutput, QuickSightClientResolvedConfig> {
    readonly input: SearchDashboardsCommandInput;
    constructor(input: SearchDashboardsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: QuickSightClientResolvedConfig, options?: __HttpHandlerOptions): Handler<SearchDashboardsCommandInput, SearchDashboardsCommandOutput>;
    private serialize;
    private deserialize;
}
