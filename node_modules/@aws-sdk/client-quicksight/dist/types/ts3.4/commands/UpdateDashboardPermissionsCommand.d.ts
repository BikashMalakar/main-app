import { QuickSightClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../QuickSightClient";
import { UpdateDashboardPermissionsRequest, UpdateDashboardPermissionsResponse } from "../models/models_1";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type UpdateDashboardPermissionsCommandInput = UpdateDashboardPermissionsRequest;
export declare type UpdateDashboardPermissionsCommandOutput = UpdateDashboardPermissionsResponse & __MetadataBearer;
/**
 * <p>Updates read and write permissions on a dashboard.</p>
 */
export declare class UpdateDashboardPermissionsCommand extends $Command<UpdateDashboardPermissionsCommandInput, UpdateDashboardPermissionsCommandOutput, QuickSightClientResolvedConfig> {
    readonly input: UpdateDashboardPermissionsCommandInput;
    constructor(input: UpdateDashboardPermissionsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: QuickSightClientResolvedConfig, options?: __HttpHandlerOptions): Handler<UpdateDashboardPermissionsCommandInput, UpdateDashboardPermissionsCommandOutput>;
    private serialize;
    private deserialize;
}
